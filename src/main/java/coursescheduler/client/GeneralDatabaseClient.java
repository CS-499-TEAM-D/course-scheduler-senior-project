package coursescheduler.client;

import com.google.api.services.sheets.v4.Sheets;
import com.google.api.services.sheets.v4.model.ValueRange;

import java.io.IOException;
import java.util.List;

public abstract class GeneralDatabaseClient {
    protected final String spreadsheetId;
    protected final Sheets service;

    protected GeneralDatabaseClient(Sheets service, String spreadsheetId) {
        this.spreadsheetId = spreadsheetId;
        this.service = service;
    }

    /**
     *
     * @param list 2D List of Objects generated by google sheets service api
     * @param toFind The string you want to find inside the 2D List of Objects
     * @return either the index of the Object that has the string, or -1 if not found
     */
    public Integer indexOfColumn(List<List<Object>> list, String toFind){
        int index = 0;
        for(; index<list.size(); index++){
            if(list.get(index).get(0).equals(toFind)){
                return index + 2; // change to 1 notation and skip header row
            }
        }
        return -1;
    }

    /**
     * @param list 2D List of Objects generated by google sheets service api
     * @param toFind The string you want to find inside the 2D List of Objects
     * @param startingIndex The starting index of the search
     * @return either the index of the Object that has the string, or -1 if not found
     */
    public Integer indexOfColumn(List<List<Object>> list, String toFind, int startingIndex){
        int index = startingIndex;
        for(; index<list.size(); index++){
            if(list.get(index).get(0).equals(toFind)){
                return index + 2; // change to 1 notation and skip header row
            }
        }
        return -1;
    }

    /**
     * @param sheet which sheet you want to fetch a column from
     * @param columnCharStart which 1st column you want to fetch via char index
     * @param columnCharFinal which final column you want to fetch via char index
     * @return A list object of all the elements of that column
     * @throws IOException
     */
    public List<List<Object>> getColumn(String sheet, char columnCharStart, char columnCharFinal) throws IOException {
        String userColumn = sheet+"!"+columnCharStart+"2:"+columnCharFinal; // 2 to end of column, skip header
        ValueRange userRange = service.spreadsheets().values().get(spreadsheetId, userColumn).execute();
        return userRange.getValues();
    }

    /**
     * @param email takes in a user email to find
     * @return returns the numerical index of that user as it appears in the remote google sheet
     * @throws IOException
     */
    public int findUserIndex(String email) throws IOException {
        // get a list of all the users and find the index of the email passed
        List<List<Object>> users = getColumn("CREDS", 'A', 'A');
        return indexOfColumn(users, email);
    }

}
